<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>FacebookGroupSheet</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Main.WebHome</parent>
<creator>XWiki.jvelo</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1349946268000</creationDate>
<date>1350581203000</date>
<contentUpdateDate>1350581203000</contentUpdateDate>
<version>6.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>{{groovy}}
import groovy.json.JsonSlurper

def slurper = new JsonSlurper()

def hasFacebook = services.socialAuth.hasProvider("facebook")
def isConnected = services.socialAuth.isConnected("facebook")

if (hasFacebook &amp;&amp; !isConnected) {
  services.socialAuth.ensureConnected("facebook")
  isConnected = services.socialAuth.isConnected("facebook")
}

def accessToken =  isConnected ? services.socialAuth.getToken("facebook") : null

def groupObject = doc.getObject("XWiki.FacebookGroupClass", "language", xcontext.language)
if (groupObject == null) {
  // if the group object is not found, try ignoring the language
  groupObject = doc.getObject("XWiki.FacebookGroupClass")
}

if (groupObject) {
   def groupId = groupObject.getProperty("url")?.value ?: ""
   groupId = (groupId.indexOf("/") &gt; 0) ? groupId.split("/")[-1]: ""
   if (groupId &amp;&amp; groupId.matches("[0-9]+")) {
     def groupGraphBaseURL = "https://graph.facebook.com/" + groupId
     def url = new URL(groupGraphBaseURL)
     def connection = url.openConnection()
     if (connection.responseCode == 400) {
       println "{{error}}Unauthorized!{{/error}}"
     }
     else {
       def facebookResponse = url.text
       def json = slurper.parseText(facebookResponse)

       println """
= Group: ${json.name} =

image:${groupGraphBaseURL + "/picture"}

{{box image="${json.icon}"}}
${json.description}
{{/box}}

"""

       def feedURL = groupGraphBaseURL + "/feed"

       if (accessToken) {
         feedURL += "?&amp;access_token=" + accessToken 
       }

       feedURL = feedURL.toURL()
       connection = feedURL.openConnection()
       if (connection.responseCode == 200) {

         println """|=From|=Message|="""
         def data = slurper.parseText(feedURL.text).data
         for (post in data) {
           println """|${post.from.name}|((( ${post.picture ? "image:${post.picture}" : ""} {{{ ${post.message ? post.message : ""} }}} ))) |"""

           // Posts can be one of those types :
           // - link
           // - photo
           // - status
           // - video
           switch(post.type) {
             case "photo":
               break;
           }
         }

       }
       else {
         // Un-authorized ? Server down ? etc.
       }
     }

   }
   
}

{{/groovy}}
</content></xwikidoc>